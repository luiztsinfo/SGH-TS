unit unDM;

interface

uses
  System.SysUtils, System.Classes, uDWDataModule, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.VCLUI.Wait, FireDAC.Phys.PGDef, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, uRESTDWServerEvents, FireDAC.Phys.PG, FireDAC.Comp.UI,
  uRESTDWPoolerDB, uDWAbout, uRestDWDriverFD, uDWJSONObject;

type
  TDM = class(TServerMethodDataModule)
    FDConexao: TFDConnection;
    RESTDWDriverFD: TRESTDWDriverFD;
    RESTDWPoolerDB: TRESTDWPoolerDB;
    FDGUIxWaitCursor: TFDGUIxWaitCursor;
    FDPhysPgDriverLink: TFDPhysPgDriverLink;
    DWServerEvents: TDWServerEvents;
    WebServerEvents: TDWServerEvents;
    qryGeral: TFDQuery;
    procedure DWServerEventsEventsInsertPacienteReplyEvent(
      var Params: TDWParams; var Result: string);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DM: TDM;

implementation

uses
  U_MyResult, unPessoa;

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TDM.DWServerEventsEventsInsertPacienteReplyEvent(
  var Params: TDWParams; var Result: string);
var
  vJSONValue: TJSONValue;
  oResult: TMyResult;
  oPessoa: TPessoa;
begin

end;

end.
