unit Controller.Cirurgia;



{ TControllerPaciente }

procedure TControllerAlergia.alimentaCamposModel;
begin
  Model.Id := FRegistrosAlergia.FieldByName('id').AsInteger;
  Model.Descricao := FRegistrosAlergia.FieldByName('descricao').AsString;
  Model.Tipo_alergia := FRegistrosAlergia.FieldByName('tipo_alergia').AsInteger;
  Model.Situacao := FRegistrosAlergia.FieldByName('situacao').AsString;
end;

procedure TControllerAlergia.consultar(sCampoWhere, sOrderBy: string);
begin
  try
    FRegistrosAlergia := FDao.ConsultaTab(FModel,['*'],['situacao',sCampoWhere],sOrderBy,comLike);

    FDsAlergia.DataSet := FRegistrosAlergia;
    alimentaCamposModel;
  finally

  end;
end;

constructor TControllerAlergia.Create;
begin
  FConexao    := TConexao.Create;
  FDsAlergia := TDataSource.Create(nil);
  FRegistrosAlergia  := TDataSet.Create(nil);
  FModel:= TAlergia.Create;

  inherited Create(FConexao.FdCon,FConexao.FdTran);
  FDao        := TDaoFireDac.Create(FConexao.FdCon,FConexao.FdTran);
end;

destructor TControllerAlergia.Destroy;
begin
  FRegistrosAlergia.Free;
  FDsAlergia.Free;
  FModel.Free;
  FConexao.Free;
  FDao.Free;
  inherited Destroy;
end;

function TControllerAlergia.GetDataSource: TDataSource;
begin
  Result := FDsAlergia;
end;

procedure TControllerAlergia.mostraDados;
begin
  try
    FModel.Situacao := sATIVO;

    FRegistrosAlergia  := FDao.ConsultaTab(FModel,['*'],['situacao'],[],semLike);

    FDsAlergia.DataSet := FRegistrosAlergia;
    alimentaCamposModel;
  finally

  end;
end;

procedure TControllerAlergia.SetModel(const Value: TAlergia);
begin
  FModel := Value;
end;

end.

}