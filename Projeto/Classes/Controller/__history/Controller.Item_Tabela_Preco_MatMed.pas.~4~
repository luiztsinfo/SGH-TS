unit Controller.Item_Tabela_Preco_MatMed;

interface

uses Model.Itens_Tabela_Preco_Matmed, Data.DB;

type
  TControllerItensTabelaPrecoMatMed = class

    private
      FDataSet: TDataSet;
      FDataSource: TDataSource;
      FModel: TItens_Tabela_Preco_Matmed;

      FIDTabelaMatMed: integer;
      constructor Create;
      destructor Destroy; override;
    public
      property IDTabelaMatMed: integer read FIDTabelaMatMed write FIDTabelaMatMed;
    protected
      function ConsultarItensTabelaMatMed(pDescricao: string): Boolean;
      function ConsultarItemTabelaMatMed(pIDMatMed: integer): Boolean;
      function IncluirItem(pIDMatMed: integer; pValor: Double): Boolean;
      function ExcluirItem(pID: integer): Boolean;
      function ExcluirTodos: Boolean;
  end;

implementation

{ TControllerItensTabelaPrecoMatMed }

function TControllerItensTabelaPrecoMatMed.ConsultarItemTabelaMatMed(
  pIDMatMed: integer): Boolean;
begin
  try

  except

  end;
end;

function TControllerItensTabelaPrecoMatMed.ConsultarItensTabelaMatMed(
  pDescricao: string): Boolean;
begin

end;

constructor TControllerItensTabelaPrecoMatMed.Create;
begin
  FDataSet := TDataSet.Create(nil);
  FDataSource := TDataSource.Create(nil);
  FModel := TItens_Tabela_Preco_Matmed.Create;
end;

destructor TControllerItensTabelaPrecoMatMed.Destroy;
begin
  FDataSet.Free;
  FDataSource.Free;
  FModel.Free;
  inherited;
end;

function TControllerItensTabelaPrecoMatMed.ExcluirItem(pID: integer): Boolean;
begin

end;

function TControllerItensTabelaPrecoMatMed.ExcluirTodos: Boolean;
begin

end;

function TControllerItensTabelaPrecoMatMed.IncluirItem(pIDMatMed: integer;
  pValor: Double): Boolean;
begin

end;

end.
