unit unFrmAtendimentosFatura;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Mask,
  Vcl.Buttons, Data.DB, Vcl.Grids, Vcl.DBGrids, Controller.AtendimentosFatura,
  unConstantes, unFrmPacientes, u_FrmBase;

type
  TfrmAtendimentoFatura = class(TForm)
    pnConsultaAtendimento: TPanel;
    pnAtendimentos: TPanel;
    pnBotoes: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    mskInicial: TMaskEdit;
    mskFinal: TMaskEdit;
    Label3: TLabel;
    edtAtendimento: TEdit;
    Label4: TLabel;
    edtPaciente: TEdit;
    lblPaciente: TLabel;
    SpdBtnPaciente: TSpeedButton;
    GrdAtendimentos: TDBGrid;
    BtnReabrir: TBitBtn;
    BtnSair: TBitBtn;
    BtnConsultar: TBitBtn;
    lblTotalFatura: TLabel;
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure BtnSairClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure BtnReabrirClick(Sender: TObject);
    procedure BtnConsultarClick(Sender: TObject);
    procedure edtPacienteExit(Sender: TObject);
    procedure SpdBtnPacienteClick(Sender: TObject);
  private
    FController: TControllerAtendimentosFatura;
  public
    vFatura: integer;
  end;

var
  frmAtendimentoFatura: TfrmAtendimentoFatura;

implementation

{$R *.dfm}

procedure TfrmAtendimentoFatura.BtnConsultarClick(Sender: TObject);
begin
  if (edtAtendimento.Text <> trim('')) and (edtAtendimento.Text <> trim('0')) then
    FController.BuscarAtendimentos(vFatura,StrToInt(edtAtendimento.Text))
  else
  if (edtPaciente.Text <> trim('')) and (edtPaciente.Text <> trim('0')) then
    FController.BuscarAtendimentos(vFatura,StrToInt(edtPaciente.Text),
      StrToDate(mskInicial.Text),StrToDate(mskFinal.Text))
  else
  FController.BuscarAtendimentos(vFatura,StrToDate(mskInicial.Text),StrToDate(mskFinal.Text));
end;

procedure TfrmAtendimentoFatura.BtnReabrirClick(Sender: TObject);
begin
  if FController.ReabrirAtendimento(FController.Registros.FieldByName('id_atendimento').AsInteger) then
    FController.BuscarAtendimentos(vFatura,StrToDate(mskInicial.Text),StrToDate(mskFinal.Text));
end;

procedure TfrmAtendimentoFatura.BtnSairClick(Sender: TObject);
begin
  Self.Close;
end;

procedure TfrmAtendimentoFatura.edtPacienteExit(Sender: TObject);
var
  vValue: integer;
begin
  inherited;
  if TryStrToInt(edtPaciente.Text,vValue) then
    lblPaciente.Caption := FController.GetNomePaciente(vValue,iINCLUINDO);
end;

procedure TfrmAtendimentoFatura.FormCreate(Sender: TObject);
begin
  FController := TControllerAtendimentosFatura.Create;
  GrdAtendimentos.DataSource := FController.Ds;

end;

procedure TfrmAtendimentoFatura.FormDestroy(Sender: TObject);
begin
  FreeAndNil(FController);
end;

procedure TfrmAtendimentoFatura.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = vk_escape then
    Self.Close;

  if Key = VK_RETURN then
    perform(WM_NEXTDLGCTL,0,0);
end;

procedure TfrmAtendimentoFatura.FormShow(Sender: TObject);
begin
  FController.BuscarAtendimentos(vFatura,StrToDate(mskInicial.Text),StrToDate(mskFinal.Text));
  lblTotalFatura.Caption := 'Total Geral: '+ FloatToStr(FController.Registros.FieldByName('TotalGeral').AsFloat);
end;

procedure TfrmAtendimentoFatura.SpdBtnPacienteClick(Sender: TObject);
var
  vValue: integer;
begin
  inherited;
  try
    frmPacientes := TfrmPacientes.Create(Self,toConsulta);
    frmPacientes.ShowModal;
  finally
    edtPaciente.Text := IntToStr(frmPacientes.FValueFieldKey);

    if TryStrToInt(edtPaciente.Text,vValue) then
      lblPaciente.Caption := FController.GetNomePaciente(vValue,iINCLUINDO);

    FreeAndNil(frmPacientes);
  end;
end;

end.
