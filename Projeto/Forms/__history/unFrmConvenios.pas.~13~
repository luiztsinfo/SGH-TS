unit unFrmConvenios;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, u_FrmBase, Data.DB, Vcl.StdCtrls,
  Vcl.Buttons, Vcl.Grids, Vcl.DBGrids, Vcl.ExtCtrls, Vcl.ComCtrls, Vcl.Mask,
  Controller.Convenio, unConstantes, unFrmTabelasPrecoMatMed,
  unFrmTabelasPrecoProcedimentos;

type
  TfrmConvenios = class(TfrmBase)
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label5: TLabel;
    lblCidade: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    lblTabelaPrecoMatMed: TLabel;
    lblTabelaPrecoProcedimentos: TLabel;
    Label17: TLabel;
    edtID: TEdit;
    edtNome: TEdit;
    edtEndereco: TEdit;
    edtCodCidade: TEdit;
    edtBairro: TEdit;
    edtRegistroANS: TEdit;
    edtCodHospitalConvenio: TEdit;
    edtCodTabelaPrecoMatMed: TEdit;
    edtCodTabelaPrecoProcedimentos: TEdit;
    mskCEP: TMaskEdit;
    mskCNPJConvenio: TMaskEdit;
    CbxFonteRemuneracao: TComboBox;
    BtnBuscaCidade: TBitBtn;
    CbxExportaCIH: TComboBox;
    BtnBuscaTabelaPrecoMatMed: TBitBtn;
    BtnBuscaTabelaPrecoProcedimentos: TBitBtn;
    procedure edtCodCidadeExit(Sender: TObject);
    procedure edtCodTabelaPrecoMatMedExit(Sender: TObject);
    procedure edtCodTabelaPrecoProcedimentosExit(Sender: TObject);
    procedure BtnBuscaTabelaPrecoMatMedClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure BtnBuscaTabelaPrecoProcedimentosClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmConvenios: TfrmConvenios;

implementation

{$R *.dfm}

procedure TfrmConvenios.BtnBuscaTabelaPrecoProcedimentosClick(Sender: TObject);
var
  vValue: integer;
begin
  inherited;
  try
    frmTabelasPrecoProcedimentos := TfrmTabelasPrecoProcedimentos.Create(Self,toConsulta);
    frmTabelasPrecoProcedimentos.ShowModal;
  finally
    edtCodTabelaPrecoProcedimentos.Text := IntToStr(frmTabelasPrecoProcedimentos.FValueFieldKey);

    if TryStrToInt(edtCodTabelaPrecoProcedimentos.Text,vValue) then
      lblTabelaPrecoProcedimentos.Caption := TControllerConvenio(FController).GetDescricaoTabelaProcedimentos(vValue,iINCLUINDO);

    FreeAndNil(frmTabelasPrecoProcedimentos);
  end;
end;

procedure TfrmConvenios.BtnBuscaTabelaPrecoMatMedClick(Sender: TObject);
var
  vValue: integer;
begin
  inherited;
  try
    frmTabelasMatMed := TfrmTabelasMatMed.Create(Self,toConsulta);
    frmTabelasMatMed.ShowModal;
  finally
    edtCodTabelaPrecoMatMed.Text := IntToStr(frmTabelasMatMed.FValueFieldKey);

    if TryStrToInt(edtCodTabelaPrecoMatMed.Text,vValue) then
      lblTabelaPrecoMatMed.Caption := TControllerConvenio(FController).GetDescricaoTabelaMatMed(vValue,iINCLUINDO);

    FreeAndNil(frmTabelasMatMed);
  end;
end;

procedure TfrmConvenios.edtCodCidadeExit(Sender: TObject);
var
  vValue: integer;
begin
  inherited;

  if TryStrToInt(edtCodCidade.Text,vValue) then
    lblCidade.Caption := TControllerConvenio(FController).GetNomeCidade(vValue,iINCLUINDO);
end;

procedure TfrmConvenios.edtCodTabelaPrecoMatMedExit(Sender: TObject);
var
  vValue: integer;
begin
  inherited;

  if TryStrToInt(edtCodTabelaPrecoMatMed.Text,vValue) then
    lblTabelaPrecoMatMed.Caption := TControllerConvenio(FController).GetDescricaoTabelaMatMed(vValue,iINCLUINDO);
end;

procedure TfrmConvenios.edtCodTabelaPrecoProcedimentosExit(Sender: TObject);
var
  vValue: integer;
begin
  inherited;

  if TryStrToInt(edtCodTabelaPrecoProcedimentos.Text,vValue) then
    lblTabelaPrecoProcedimentos.Caption := TControllerConvenio(FController).GetDescricaoTabelaProcedimentos(vValue,iINCLUINDO);
end;

procedure TfrmConvenios.FormCreate(Sender: TObject);
begin
  FController := TControllerConvenio.Create;
  inherited;
end;

end.
